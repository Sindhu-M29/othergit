name: Maven-Deploy-Workflow

on:
  workflow_dispatch:
    inputs:
      project:
        type: choice
        required: true
        default: 'cds'
        options:
          - 'cds'
          - 'content'
          - 'media'
          - 'fuelight'
          - 'wklypls'
          - 'gmp'

jobs:
  build:
    name: Build Job
    runs-on: ubuntu-latest
    environment: dev
    env:
      AZCOPY_SPA_APPLICATION_ID: ${{ secrets.CLIENTID }}
      AZCOPY_SPA_CLIENT_SECRET: ${{ secrets.CLIENTSECRET }}
      AZCOPY_TENANT_ID: ${{ secrets.TENANTID }}
      AZCOPY_AUTO_LOGIN_TYPE: SPN
      MAVEN_OPTS: "-Xss4M"
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 1.8.0
        uses: actions/setup-java@v3
        with:
          java-version: '8.0'
          distribution: 'temurin'
      - name: Generate settings.xml
        run: |
          cat <<EOF > ./settings.xml
          <settings>
            <servers>
              <server>
                <id>github</id>
                <username>${{ secrets.MAVEN_USERNAME }}</username>
                <password>${{ secrets.MAVEN_PASSWORD }}</password>
              </server>
            </servers>
          </settings>
          EOF
      - name: Build Maven Package
        run: mvn -B package --file pom.xml -s ./settings.xml -P TCCC-snapshot-feed -DskipTests
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: jar-artifact
          path: /home/runner/work/tccc-mai-consumer-marketing-analytics/tccc-mai-consumer-marketing-analytics/target/tccc-dna-marketing-data-platform-1.0-SNAPSHOT.jar

  move-jar-file:
    name: Move Jar File
    runs-on: self-hosted
    needs: build
    environment: dev
    env:
      AZCOPY_SPA_APPLICATION_ID: ${{ secrets.CLIENTID }}
      AZCOPY_SPA_CLIENT_SECRET: ${{ secrets.CLIENTSECRET }}
      AZCOPY_TENANT_ID: ${{ secrets.TENANTID }}
      AZCOPY_AUTO_LOGIN_TYPE: SPN
      DEV_FILE_PATH: ${{ github.event.inputs.project == 'content' && vars.DEV_DAM_JAR_FILE_PATH || 
        github.event.inputs.project == 'cds' && vars.DEV_CDS_JAR_FILE_PATH || 
        github.event.inputs.project == 'media' && vars.DEV_MEDIA_JAR_FILE_PATH ||
        github.event.inputs.project == 'fuelight' && vars.DEV_FUELIGHT_JAR_FILE_PATH ||
        github.event.inputs.project == 'wklypls' && vars.DEV_WKLYPLS_JAR_FILE_PATH ||
        github.event.inputs.project == 'gmp' && vars.DEV_GMP_JAR_FILE_PATH ||
        vars.DEV_CDS_JAR_FILE_PATH }}
    steps:
      - uses: actions/checkout@v2
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: jar-artifact
          path: /home/runner/work/tccc-mai-consumer-marketing-analytics/tccc-mai-consumer-marketing-analytics/target
      - name: Install AzCopy
        run: |
          Invoke-WebRequest -Uri https://aka.ms/downloadazcopy-v10-windows -OutFile azcopy.zip
          Expand-Archive -Path azcopy.zip -DestinationPath ./azcopy
          Move-Item -Path ./azcopy/azcopy_windows_amd64_*/azcopy.exe -Destination C:/azcopy/azcopy.exe
          echo "C:/azcopy" | Out-File -FilePath $env:GITHUB_PATH -Append
      - name: Verify AzCopy Installation
        run: |
          echo "Verifying AzCopy Installation"
          dir "C:/azcopy"  # Check if the executable exists
          "C:/azcopy/azcopy.exe" --version  # Verify AzCopy works
      - name: Run AzCopy
        run: |
          "C:/azcopy/azcopy.exe" --version
          "C:/azcopy/azcopy.exe" copy "target/*.jar" "${{ env.DEV_FILE_PATH }}" --recursive
